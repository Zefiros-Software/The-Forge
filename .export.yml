%YAML 1.1
---
version: '>=0.0.0 || @head'
export: |

    project "The-Forge"
        kind "StaticLib"

        files { 
            "Common_3/OS/Camera/**.cpp",
            "Common_3/OS/Core/**.cpp",
            "Common_3/OS/Image/**.cpp",
            "Common_3/OS/Interfaces/**.cpp",
            "Common_3/OS/Logging/**.cpp",
            "Common_3/OS/Math/**.cpp",
            "Common_3/OS/MemoryTracking/**.cpp",
            "Common_3/Renderer/**.cpp",
            "Common_3/ThirdParty/OpenSource/TinyEXR/**.cpp",
            "Middleware_3/UI/**.cpp"
        }
                

        filter "system:windows"        
            files "Common_3/OS/Windows/Windows*.cpp"

            removefiles "Common_3/OS/Windows/WindowsBase.cpp"

            --linksfiles "winpix/bin/WinPixEventRuntime"
            
        filter "system:linux"      
            files "Common_3/OS/Linux/**.cpp"  
            
        filter "system:macosx"
            files {
                "Common_3/OS/macOS/**.cpp",
                "Common_3/OS/macOS/**.mm"
            }
            
        filter {}
    
        zpm.export [[
            includedirs "Common_3"
            cppdialect "C++11"

            local backend = zpm.setting("backend")
            if not backend then
                if os.istarget("windows") then
                    backend =  "d3d12"
                    
                elseif os.istarget("macosx") then
                    backend = "metal"
                    
                elseif os.istarget("linux") then
                    backend = "vulkan"
                end
            end
            
            if backend == "d3d12" then
                defines "DIRECT3D12"
                
            elseif backend == "metal" then
                defines "METAL"
                
            elseif backend == "vulkan" then
                defines "VULKAN"
            end

            filter {"system:windows", "kind:not SharedLib or not StaticLib"}
                postbuildcommands {
                    string.format("{COPY} \"%s/winpix/bin/WinPixEventRuntime.dll\" \"%%{cfg.buildtarget.directory}\"", zpm.exportpath())
                }

            filter {}
        ]]
...
